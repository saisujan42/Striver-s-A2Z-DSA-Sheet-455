1. Brute Force Approach 
TC : O(N^2) SC : O(1)     ->      TLE
SC : O(N) if Considering Storing the Answer

class Solution 
{
    public:
    vector<int> leaders(int n, int arr[]) 
    {
        vector<int> Answer;
        for(int i = 0; i < n; i++)
        {
            bool Val = true;
            for(int j = i + 1; j < n; j++)
            {
                if(arr[j] >= arr[i])
                {
                    Val = false;
                    break;
                }
            }
            if(Val)
                Answer.push_back(arr[i]);
        }
        return Answer;
    }
};


2. Optimal Solutin 
TC : O(N) SC : O(1)
SC : O(N) if Considering Storing the Answer

class Solution 
{
    public:
    vector<int> leaders(int n, int arr[]) 
    {
        int MaxVal = INT_MIN;
        vector<int> Answer;
        for(int i = n - 1; i >= 0; i--)
        {
            if(arr[i] >= MaxVal)
            {
                Answer.push_back(arr[i]);
                MaxVal = arr[i];
            }
        }
        reverse(Answer.begin(), Answer.end());
        return Answer;
    }
};