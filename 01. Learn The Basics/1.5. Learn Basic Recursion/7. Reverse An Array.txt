1. Copying In Reverse To New Array
TC : O(2N) SC : O(N)

class Solution {
public:
    void reverseString(vector<char>& s) 
    {
        int n = s.size();
        vector<char> Ans(n);
        for(int i = 0; i < n; i++)
            Ans[n - i - 1] = s[i];
        for(int i = 0; i < n; i++)
            s[i] = Ans[i];
    }
};


2. Swapping From 2 End 
TC : O(N/2) SC : O(1)

class Solution {
public:
    void reverseString(vector<char>& s) 
    {
        int n = s.size();
        for(int i = 0; i < n/2; i++)
            swap(s[i], s[n - i - 1]);
    }
};




3. Recursive Code
TC : O(N/2) SC : O(1)

class Solution {
public:
    void Reverse(vector<char> &s, int Start, int End)
    {
        if(Start >= End)
            return;
        swap(s[Start], s[End]);
        Reverse(s, Start + 1, End - 1);
    }
    void reverseString(vector<char>& s) 
    {
        int n = s.size();
        Reverse(s, 0, n - 1);
    }
};


4. Using In-Built Function

class Solution {
public:
    void reverseString(vector<char>& s) 
    {
        reverse(s.begin(), s.end());
    }
};