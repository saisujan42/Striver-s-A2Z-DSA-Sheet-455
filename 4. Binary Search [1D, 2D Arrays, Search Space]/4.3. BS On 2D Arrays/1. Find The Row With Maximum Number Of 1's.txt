1. Brute Force Approach (Linear Search)
TC : O(N * M) SC : O(1)

class Solution {
  public:
    int rowWithMax1s(vector<vector<int> > &arr) 
    {
        int n = arr.size();
        int m = arr[0].size();
        int MaxCount = 0, Index = -1;
        for(int i = 0; i < n; i++)
        {
            int Count = 0;
            for(int j = 0; j < m; j++)
                if(arr[i][j] == 1)
                    Count++;
            if(Count > MaxCount)
                MaxCount = Count, Index = i;
        }
        return Index;
    }
};


2. Binary Search
TC : O(N * LogM) SC : O(1)

class Solution {
  public:
    int rowWithMax1s(vector<vector<int> > &arr) 
    {
        int n = arr.size();
        int m = arr[0].size();
        int MaxCount = 0, Index = -1;
        for(int i = 0; i < n; i++)
        {
            int Low = 0, High = m - 1;
            while(Low <= High)
            {
                int Mid = (Low + High) / 2;
                if(arr[i][Mid] == 1)
                    High = Mid - 1;
                else
                    Low = Mid + 1;
            }
            int Count = m - Low;
            if(Count > MaxCount)
                MaxCount = Count, Index = i;
        }
        return Index;
    }
};