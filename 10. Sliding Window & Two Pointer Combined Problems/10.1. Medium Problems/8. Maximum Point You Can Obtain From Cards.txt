1. 2-Pointer Approach
TC : O(2*K) SC : O(1)

class Solution {
public:
    int maxScore(vector<int>& cardPoints, int k) 
    {
        int n = cardPoints.size();
        int LeftSum = 0, RightSum = 0, MaxSum = 0;
        for(int i = 0; i < k; i++)
            LeftSum += cardPoints[i];
        MaxSum = LeftSum;

        for(int i = k - 1, j = n - 1; i >= 0; i--, j--)
        {
            LeftSum -= cardPoints[i];
            RightSum += cardPoints[j];
            MaxSum = max(MaxSum, LeftSum + RightSum);
        }    
        return MaxSum;
    }
};