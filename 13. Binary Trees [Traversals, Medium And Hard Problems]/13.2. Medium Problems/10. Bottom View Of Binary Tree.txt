1. Bottom View Of Binary Tree
   Using Vertical Order Traversal
   Adding Last Element of Every Column to Answer
   (Same Code as it is of Top View with Only One If Condition Removed)

TC : O(N) SC : O(N)

class Solution
{
    public:
    vector<int> bottomView(Node *root)
    {
        if(root == NULL) return {};
        
        vector<int> Answer;
        map<int, int> Map;
        queue<pair<Node*, int>> Queue;
        Queue.push({root, 0});
        
        while(!Queue.empty())
        {
            auto it = Queue.front();
            Queue.pop();
            Node *node = it.first;
            int Column = it.second;
                                                    // Only Small Change from Top View (No if Condition Here)
            Map[Column] = node -> data; 
            if(node -> left) Queue.push({node -> left, Column - 1});
            if(node -> right) Queue.push({node -> right, Column + 1});
        }
        
        for(auto Value : Map)
            Answer.push_back(Value.second);
        return Answer;
    }

};