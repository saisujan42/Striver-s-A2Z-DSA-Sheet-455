1. InOrder, PreOrder, PostOrder Traversals 
   In A Single Traversal

TC : O(N)
SC : O(N) -> Stack Space


vector<vector<int>> getTreeTraversal(TreeNode *root)
{
    if(root == NULL) return {{}};

    vector<int> InOrder, PreOrder, PostOrder;
    stack<pair<TreeNode*, int>> Stack;
    Stack.push({root, 1});

    while(!Stack.empty())
    {
        auto it = Stack.top();
        Stack.pop();
        if(it.second == 1)
        {
            PreOrder.push_back(it.first -> data);
            it.second++;
            Stack.push(it);

            if(it.first -> left != NULL)
              Stack.push({it.first->left, 1});
        }
        else if(it.second == 2)
        {
            InOrder.push_back(it.first -> data);
            it.second++;
            Stack.push(it);

            if(it.first -> right != NULL)
                Stack.push({it.first -> right, 1});
        }
        else
            PostOrder.push_back(it.first -> data);
    }
    return {InOrder, PreOrder, PostOrder};
}