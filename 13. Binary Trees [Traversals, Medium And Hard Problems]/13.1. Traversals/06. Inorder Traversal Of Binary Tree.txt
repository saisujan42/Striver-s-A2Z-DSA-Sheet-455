1. InOrder Traversal In C++ (Recursion)

TC : O(N) 
SC : O(1) -> Not Considering Answer as Extra Space

class Solution 
{
    public:
    void InOrder(TreeNode *root, vector<int> &Answer)
    {
        if(root != NULL)
        {
            InOrder(root -> left, Answer);
            Answer.push_back(root -> val);
            InOrder(root -> right, Answer);
        }
    }
    vector<int> inorderTraversal(TreeNode* root) 
    {
        vector<int> Answer;
        InOrder(root, Answer);
        return Answer;    
    }
};


2. InOrder Traversal In Java (Recursion)

TC : O(N) 
SC : O(1) -> Not Considering Answer as Extra Space

class Solution {
    void Inorder(TreeNode root, List<Integer> l)
    {
        if(root == null)
            return;
        Inorder(root.left, l);
        l.add(root.val);
        Inorder(root.right, l);
    }
    public List<Integer> inorderTraversal(TreeNode root) 
    {
        List<Integer> l = new ArrayList<>();
        Inorder(root, l);
        return l;
    }
}