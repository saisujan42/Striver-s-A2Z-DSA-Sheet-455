1. Using DFS Traversal
   Count 1's Islands
   By Modifying the Input Matrix instead of Using Visited

TC : O(N * M)
SC : O(1)

class Solution {
public:
    vector<int> X = {-1, 1, 0, 0};
    vector<int> Y = {0, 0, -1, 1};
    void DFS(int i, int j, vector<vector<char>> &grid)
    {
        int n = grid.size();
        int m = grid[0].size();
        grid[i][j] = '0';
        
        for(int x = 0; x < 4; x++)
        {
            int row = i + X[x];
            int col = j + Y[x];
            if(row >= 0 && row < n && col >= 0 && col < m)
            {
                if(grid[row][col] == '1')
                    DFS(row, col, grid);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) 
    {
        int n = grid.size();
        int m = grid[0].size();
        int Count = 0;
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
            {
                if(grid[i][j] == '1')
                {
                    Count++;
                    DFS(i, j, grid);
                }
            }
        }    
        return Count;
    }
};