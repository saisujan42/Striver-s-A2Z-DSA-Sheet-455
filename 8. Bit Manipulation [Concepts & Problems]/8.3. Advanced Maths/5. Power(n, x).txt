1. Using STL Pow() Function
TC : O(LogN) SC : O(1)

class Solution {
public:
    double myPow(double x, int n) 
    {
        return pow(x, n);
    }
};


2. Brute Force Approach (Multiply x for n Times)
TC : O(|N|) SC : O(1)      ->      TLE

class Solution {
public:
    double myPow(double x, int n) 
    {
        if(n == 0) return 1;
        if(n < 0) x = 1 / x;
        double Answer = 1;
        for(long long int i = 1; i <= abs(n); i++)
            Answer *= x;
        return Answer;    
    }
};


3. Using Exponentiation
TC : O(LogN) SC : O(1)

class Solution {
public:
    double myPow(double x, int n) 
    {
        long long N = abs(n);
        double Answer = 1.0;
        while(N)
        {
            if(N % 2 == 1)
            {
                Answer *= x;
                N--;
            }
            else
            {
                N /= 2;
                x = x * x;
            }
        }
        if(n < 0)
            return 1.0 / Answer;
        return Answer;
    }
};