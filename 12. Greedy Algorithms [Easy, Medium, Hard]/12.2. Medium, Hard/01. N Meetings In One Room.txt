1. Sort Based On End Time
TC : O(NLogN + N) SC : O(2N)

class Solution {
    public:
    int maxMeetings(int n, int start[], int end[]) 
    {
        vector<pair<int, int>> arr(n);
        for(int i = 0; i < n; i++)
            arr[i] = {end[i], start[i]};
        sort(arr.begin(), arr.end());
        
        int Count = 1, FreeTime = arr[0].first;
        for(int i = 1; i < n; i++)
        {
            if(arr[i].second > FreeTime)
            {
                Count++;
                FreeTime = arr[i].first;
            }
        }
        return Count;
    }
};