1. Greedy Algorithm
   Traversing & Storing Answer in New Vector

TC : O(N)
SC : O(1)  ->  (Not Considering Answer as Extra Space, as It is Given in Question)

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) 
    {
        int n = intervals.size();
        vector<vector<int>> Answer;

        int i = 0;
        while(i < n && intervals[i][1] < newInterval[0])
            Answer.push_back(intervals[i++]);
        while(i < n && intervals[i][0] <= newInterval[1])
        {
            newInterval[0] = min(intervals[i][0], newInterval[0]);
            newInterval[1] = max(intervals[i][1], newInterval[1]);
            i++;
        }
        Answer.push_back(newInterval);
        while(i < n)
            Answer.push_back(intervals[i++]);
        return Answer;
    }
};