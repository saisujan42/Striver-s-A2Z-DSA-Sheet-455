1. Using Stack 
TC : O(2N) SC : O(N)

class Solution {
public:
    ListNode* reverseList(ListNode* head) 
    {
        ListNode* temp = head;
        stack<int> Stack;
        while(temp != NULL)
        {
            Stack.push(temp -> val);
            temp = temp -> next;
        }
        temp = head;
        while(temp != NULL)
        {
            temp -> val = Stack.top();
            Stack.pop();
            temp = temp -> next;
        }
        return head;
    }
};


2. Using Iteraion 
TC : O(N) SC : O(1)

class Solution {
public:
    ListNode* reverseList(ListNode* head) 
    {
        ListNode* temp = head, * prev = NULL, *front = NULL;
        while(temp != NULL)
        {
            front = temp -> next;
            temp -> next = prev;
            prev = temp;
            temp = front;
        }    
        return prev;
    }
};
