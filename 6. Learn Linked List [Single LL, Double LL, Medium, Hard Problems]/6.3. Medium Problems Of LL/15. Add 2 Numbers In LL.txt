1. Add 2 Numbers in LL 
TC : O(Max(N1, N2)) SC : O(Max(N1, N2) + 1)

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        ListNode *temp1 = l1, *temp2 = l2;
        ListNode *DummyNode = new ListNode(-1);
        ListNode *Current = DummyNode;
        int Carry = 0;
        while(temp1 != NULL || temp2!= NULL)
        {
            int Sum = Carry;
            if(temp1 != NULL)
            {
                Sum += temp1 -> val;
                temp1 = temp1 -> next;
            }
            if(temp2 != NULL)
            {
                Sum += temp2 -> val;
                temp2 = temp2 -> next;
            }
            ListNode *newNode = new ListNode(Sum % 10);
            Carry = Sum / 10;
            Current -> next = newNode;
            Current = Current -> next;
        }
        if(Carry != 0)
        {
            ListNode *newNode = new ListNode(Carry);
            Current -> next = newNode;
        }
        return DummyNode -> next;
    }
};