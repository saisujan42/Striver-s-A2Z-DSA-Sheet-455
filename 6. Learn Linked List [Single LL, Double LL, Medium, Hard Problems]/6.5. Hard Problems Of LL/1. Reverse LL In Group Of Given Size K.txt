1. Reverse Group Of Size K
TC : O(2N) SC : O(1)

class Solution {
public:
    ListNode *FindKthNode(ListNode *temp, int k)
    {
        for(int i = 1; i < k && temp != NULL; i++)
            temp = temp -> next;
        return temp;
    }
    ListNode *Reverse(ListNode *temp)
    {
        ListNode *prev = NULL, *front = NULL;
        while(temp != NULL)
        {
            front = temp -> next;
            temp -> next = prev;
            prev = temp;
            temp = front;
        }
        return prev;
    }
    ListNode* reverseKGroup(ListNode* head, int k) 
    {
        ListNode *temp = head, *prevNode = NULL;
        while(temp != NULL)
        {
            ListNode *KthNode = FindKthNode(temp, k);
            if(KthNode == NULL)
            {
                if(prevNode)
                    prevNode -> next = temp;
                break;
            }

            ListNode *NextNode = KthNode -> next;
            KthNode -> next = NULL;
            Reverse(temp);
            if(temp == head)
                head = KthNode;
            else
                prevNode -> next = KthNode;
            
            prevNode = temp;
            temp = NextNode;
        } 
        return head;
    }
};