1. Linear Search 
TC : O(N) SC : O(1)

class Solution
{
    public:	
	int findKRotation(int arr[], int n) 
	{
	    for(int i = 0; i < n - 1; i++)
	        if(arr[i] > arr[i + 1])
	            return i + 1;
	   return 0;
	}

};


2. Binary Search 
TC : O(LogN) SC : O(1)

Finding Index of Minimum Element Gives Number of Right Rotations

class Solution
{
    public:	
	int findKRotation(int arr[], int n) 
	{
	    int Low = 0, High = n - 1, Mid;
	    int Answer = INT_MAX, Index = 0;
	    while(Low <= High)
	    {
	        Mid = (Low + High) / 2;
	        if(arr[Low] <= arr[Mid])
	        {
	            if(arr[Low] < Answer)
	                Answer = arr[Low], Index = Low;
	            Low = Mid + 1;
	        }
	        else
	        {
	            if(arr[Mid] < Answer)
	                Answer = arr[Mid], Index = Mid;
	            High = Mid - 1;
	        }
	    }
	    return Index;
	}
};


